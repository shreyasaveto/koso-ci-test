"""create table of sizing tool

Revision ID: 8498474fdb45
Revises: 4421b607e235
Create Date: 2025-10-13 10:44:15.656083

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8498474fdb45'
down_revision: Union[str, Sequence[str], None] = '4421b607e235'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sizing_tool',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fluid_state', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('ix_koso_sizing_data_id'), table_name='koso_sizing_data')
    op.drop_table('koso_sizing_data')
    op.drop_index(op.f('ix_sizing_tool_data_id'), table_name='sizing_tool_data')
    op.drop_table('sizing_tool_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sizing_tool_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_no', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tag_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('service', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('inlet_line_size_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_line_size_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_schedule_value', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('inlet_wall_thk_unit', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('inlet_wall_thk_value', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('outlet_line_size_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('outlet_line_size_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outlet_schedule', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('outlet_wall_thk', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('line_material_inlet', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('line_material_outlet', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('connection_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('design_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('design_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('design_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('design_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('body_material', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('rating', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('valve_size', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('body_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('flow_direction', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('trim_characteristics', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('bonnet', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('packing', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('seat_leakage', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('shut_off_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('shut_off_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('actuator_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actuator_supply_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actuator_orientation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fail_position', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('liquid_fluid_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('liquid_critical_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('liquid_critical_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_fluid_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gas_critical_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_critical_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_critical_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_critical_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('case_description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('fluid_state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('liquid_flow_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('liquid_flow_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_flow_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_flow_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outlet_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('outlet_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pressure_drop_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('pressure_drop_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vapor_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('vapor_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('density_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('density_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dynamic_viscosity_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('dynamic_viscosity_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('molecular_weight_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_density_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('specific_heat_ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('sizing_tool_data_pkey'))
    )
    op.create_index(op.f('ix_sizing_tool_data_id'), 'sizing_tool_data', ['id'], unique=False)
    op.create_table('koso_sizing_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_no', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tag_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('service', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('inlet_line_size_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_line_size_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_schedule', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('inlet_wall_thk', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('outlet_line_size_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('outlet_line_size_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outlet_schedule', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('outlet_wall_thk', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('line_material_inlet', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('line_material_outlet', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('connection_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('design_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('design_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('design_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('design_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('body_material', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('rating', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('valve_size', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('body_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('flow_direction', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('trim_characteristics', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('bonnet', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('packing', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('seat_leakage', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('shut_off_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('shut_off_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('actuator_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actuator_supply_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actuator_orientation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fail_position', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('liquid_fluid_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('liquid_critical_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('liquid_critical_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_fluid_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gas_critical_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_critical_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_critical_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_critical_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('case_description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('fluid_state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('liquid_flow_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('liquid_flow_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_flow_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('gas_flow_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outlet_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('outlet_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pressure_drop_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('pressure_drop_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('inlet_temp_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('inlet_temp_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vapor_pressure_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('vapor_pressure_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('density_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('density_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dynamic_viscosity_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('dynamic_viscosity_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('molecular_weight_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gas_density_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('specific_heat_ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('koso_sizing_data_pkey'))
    )
    op.create_index(op.f('ix_koso_sizing_data_id'), 'koso_sizing_data', ['id'], unique=False)
    op.drop_table('sizing_tool')
    # ### end Alembic commands ###
