"""update models with new fields and relationships

Revision ID: 73c7b33cc668
Revises: e1f40773bd2f
Create Date: 2025-10-08 13:01:40.517215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '73c7b33cc668'
down_revision: Union[str, Sequence[str], None] = 'e1f40773bd2f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('countries', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('countries', sa.Column('modified_by', sa.String(), nullable=True))
    op.add_column('countries', sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('documents', sa.Column('project_id', sa.Integer(), server_default=sa.text('1'), nullable=False))
    op.add_column('documents', sa.Column('format_id', sa.Integer(), nullable=True))
    op.add_column('documents', sa.Column('fluid_state_id', sa.Integer(), nullable=True))
    op.add_column('documents', sa.Column('page_per_item', sa.Integer(), server_default='1', nullable=False))
    op.add_column('documents', sa.Column('modified_by', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('documents', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'documents', 'projects', ['project_id'], ['id'])
    op.create_foreign_key(None, 'documents', 'fluid_states', ['fluid_state_id'], ['id'])
    op.create_foreign_key(None, 'documents', 'formats', ['format_id'], ['id'])
    op.add_column('extraction_templates', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('extraction_templates', sa.Column('modified_by', sa.String(), nullable=True))
    op.add_column('extraction_templates', sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('extraction_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=False)
    op.add_column('organizations', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('organizations', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('organizations', sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('organizations', sa.Column('modified_by', sa.String(), nullable=True))
    op.add_column('projects', sa.Column('country_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'projects', 'countries', ['country_id'], ['id'])
    op.drop_column('projects', 'country')
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('users', sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('modified_by', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'modified_by')
    op.drop_column('users', 'modified_at')
    op.drop_column('users', 'created_by')
    op.drop_column('users', 'created_at')
    op.add_column('projects', sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_column('projects', 'country_id')
    op.drop_column('organizations', 'modified_by')
    op.drop_column('organizations', 'modified_at')
    op.drop_column('organizations', 'created_by')
    op.drop_column('organizations', 'created_at')
    op.alter_column('extraction_templates', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('extraction_templates', 'modified_at')
    op.drop_column('extraction_templates', 'modified_by')
    op.drop_column('extraction_templates', 'created_by')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.alter_column('documents', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('documents', 'modified_at')
    op.drop_column('documents', 'modified_by')
    op.drop_column('documents', 'page_per_item')
    op.drop_column('documents', 'fluid_state_id')
    op.drop_column('documents', 'format_id')
    op.drop_column('documents', 'project_id')
    op.drop_column('countries', 'modified_at')
    op.drop_column('countries', 'modified_by')
    op.drop_column('countries', 'created_by')
    # ### end Alembic commands ###
